{"version":3,"sources":["components/contactForm/ContactForm.js","components/contactList/ContactList.js","components/filter/Filter.js","App.js","index.js","components/contactForm/contactForm.module.css","components/contactList/contactList.module.css"],"names":["ContactForm","state","name","number","handleChange","event","target","value","setState","handleSubmit","preventDefault","props","addContactProp","className","styles","TaskEditor","onSubmit","this","TaskEditor_label","type","pattern","title","required","onChange","TaskEditor_input","TaskEditor_button","Component","ContactList","filteredContactsProp","handleDeleteProp","TaskList","map","contact","TaskList_item","TaskList_button","onClick","id","Filter","filter","App","contacts","uuidv4","addContact","find","alert","newContact","prevState","handleDelete","filterInput","toLowerCase","trim","filteredContacts","includes","ReactDOM","render","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.b4b0f98c.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport styles from \"./contactForm.module.css\";\nimport PropTypes from \"prop-types\";\n\nclass ContactForm extends Component {\n  state = {\n    name: \"\",\n    number: \"\",\n  };\n\n  handleChange = (event) => {\n    const { name, value } = event.target;\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    this.props.addContactProp(this.state.name, this.state.number);\n    this.setState({ name: \"\", number: \"\" });\n  };\n\n  render() {\n    return (\n      <div>\n        <form className={styles.TaskEditor}  onSubmit={this.handleSubmit}>\n          <label className={styles.TaskEditor_label}>\n            Name <br />\n            <input\n              type=\"text\"\n              name=\"name\"\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n              title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n              required\n              value={this.state.name}\n              onChange={this.handleChange}\n              className={styles.TaskEditor_input}\n            />\n          </label>{\" \"}\n          <label className={styles.TaskEditor_label}>\n            Number <br />\n            <input\n              type=\"tel\"\n              name=\"number\"\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n              title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n              required\n              value={this.state.number}\n              onChange={this.handleChange}\n              className={styles.TaskEditor_input}\n            />\n          </label>\n          <button type=\"submit\" className={styles.TaskEditor_button}>\n            Add contact\n          </button>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default ContactForm;\n\nContactForm.propTypes = {\n  addContactProp: PropTypes.func.isRequired,\n};\n","import styles from \"./contactList.module.css\";\nimport PropTypes from \"prop-types\";\n\nconst ContactList = ({ filteredContactsProp, handleDeleteProp }) => {\n  return (\n    <ul className={styles.TaskList}>\n      {filteredContactsProp.map((contact) => (\n        <li key={contact.id} className={styles.TaskList_item}>\n          {contact.name}: {contact.number}\n          <button\n            className={styles.TaskList_button}\n            type=\"button\"\n            onClick={() => handleDeleteProp(contact.id)}\n          >\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nexport default ContactList;\n\nContactList.propTypes = {\n  filteredContactsProp: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n  handleDeleteProp: PropTypes.func.isRequired,\n};\n","import PropTypes from \"prop-types\";\n\nconst Filter = ({ filter, handleChange }) => {\n  return (\n    <label>\n      Find contacts by name <br />\n      <input type=\"text\" name=\"filter\" value={filter} onChange={handleChange} />\n    </label>\n  );\n};\n\nexport default Filter;\n\nFilter.propTypes = {\n  filter: PropTypes.string.isRequired,\n  handleChange: PropTypes.func.isRequired,\n};\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport ContactForm from \"./components/contactForm/ContactForm\";\nimport ContactList from \"./components/contactList/ContactList\";\nimport Filter from \"./components/filter/Filter\";\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: uuidv4(), name: \"Rosie Simpson\", number: \"459-12-56\" },\n      { id: uuidv4(), name: \"Hermione Kline\", number: \"443-89-12\" },\n      { id: uuidv4(), name: \"Eden Clements\", number: \"645-17-79\" },\n      { id: uuidv4(), name: \"Annie Copeland\", number: \"227-91-26\" },\n    ],\n\n    filter: \"\",\n  };\n\n  handleChange = (event) => {\n    const { name, value } = event.target;\n    this.setState({ [name]: value });\n  };\n\n  addContact = (name, number) => {\n    if (this.state.contacts.find((contact) => contact.name === name)) {\n      alert(`${name} is already in contacts`);\n      return;\n    }\n\n    const newContact = {\n      id: uuidv4(),\n      name,\n      number,\n      filter: this.state.filter,\n    };\n\n    this.setState((prevState) => ({\n      contacts: [newContact, ...prevState.contacts],\n      filter: \"\",\n    }));\n  };\n\n  handleDelete = (id) => {\n    this.setState((prevState) => ({\n      contacts: prevState.contacts.filter((contact) => contact.id !== id),\n    }));\n  };\n\n  render() {\n    const filterInput = this.state.filter.toLowerCase().trim();\n    const filteredContacts = this.state.contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(filterInput)\n    );\n\n    return (\n      <div>\n        <h1>Phonebook</h1>\n        <ContactForm addContactProp={this.addContact} />\n\n        <h2>Contacts</h2>\n        <Filter handleChange={this.handleChange} filter={this.state.filter} />\n\n        <ContactList\n          filteredContactsProp={filteredContacts}\n          handleDeleteProp={this.handleDelete}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));","// extracted by mini-css-extract-plugin\nmodule.exports = {\"TaskEditor\":\"contactForm_TaskEditor__3H2H1\",\"TaskEditor_label\":\"contactForm_TaskEditor_label__10bas\",\"TaskEditor_input\":\"contactForm_TaskEditor_input__qb7m-\",\"TaskEditorinput\":\"contactForm_TaskEditorinput__3J_7D\",\"TaskEditor_button\":\"contactForm_TaskEditor_button__wVohr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"TaskList\":\"contactList_TaskList__1cTS7\",\"TaskList_item\":\"contactList_TaskList_item__1tmSC\",\"completed\":\"contactList_completed__2xP-Y\",\"TaskList_text\":\"contactList_TaskList_text__3siKg\",\"TaskList_actions\":\"contactList_TaskList_actions__1jc66\",\"TaskList_button\":\"contactList_TaskList_button__rEOK9\"};"],"sourceRoot":""}